/* ==========================================
   애니메이션 효과
   - 부드러운 전환 효과
   - 마이크로 인터랙션
   - 사용자 피드백 애니메이션
   ========================================== */

/* ==========================================
   기본 전환 효과
   ========================================== */

/* 페이드 인/아웃 */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 슬라이드 효과 */
@keyframes slideInUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

/* 스케일 효과 */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.3);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* 회전 효과 */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-180deg);
  }
  to {
    opacity: 1;
    transform: rotate(0deg);
  }
}

/* ==========================================
   로딩 애니메이션
   ========================================== */

/* 펄스 효과 */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* 바운스 효과 */
@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

/* 스핀 애니메이션 */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* 웨이브 로딩 */
@keyframes wave {
  0%, 60%, 100% {
    transform: initial;
  }
  30% {
    transform: translateY(-15px);
  }
}

/* 도트 로딩 */
@keyframes dotPulse {
  0%, 80%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

/* 프로그레스 바 애니메이션 */
@keyframes loadingProgress {
  0% { 
    width: 0%; 
  }
  50% { 
    width: 70%; 
  }
  100% { 
    width: 100%; 
  }
}

/* 그라데이션 쉬머 */
@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

/* ==========================================
   인터랙션 애니메이션
   ========================================== */

/* 버튼 클릭 효과 */
@keyframes buttonPress {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

/* 리플 효과 */
@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

/* 쉐이크 효과 */
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

/* 웨이브 효과 */
@keyframes wobble {
  0% {
    transform: translateX(0%);
  }
  15% {
    transform: translateX(-25%) rotate(-5deg);
  }
  30% {
    transform: translateX(20%) rotate(3deg);
  }
  45% {
    transform: translateX(-15%) rotate(-3deg);
  }
  60% {
    transform: translateX(10%) rotate(2deg);
  }
  75% {
    transform: translateX(-5%) rotate(-1deg);
  }
  100% {
    transform: translateX(0%);
  }
}

/* 하트비트 효과 */
@keyframes heartBeat {
  0% {
    transform: scale(1);
  }
  14% {
    transform: scale(1.3);
  }
  28% {
    transform: scale(1);
  }
  42% {
    transform: scale(1.3);
  }
  70% {
    transform: scale(1);
  }
}

/* ==========================================
   색상 전환 애니메이션
   ========================================== */

/* 무지개 효과 */
@keyframes rainbow {
  0% { color: #ff0000; }
  14% { color: #ff8000; }
  28% { color: #ffff00; }
  42% { color: #80ff00; }
  57% { color: #00ff00; }
  71% { color: #00ff80; }
  85% { color: #00ffff; }
  100% { color: #8000ff; }
}

/* 그라데이션 이동 */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* 컬러 페이드 */
@keyframes colorFade {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

/* ==========================================
   드레이핑 전용 애니메이션
   ========================================== */

/* 천 펄럭임 효과 */
@keyframes fabricWave {
  0%, 100% {
    transform: translateY(0) rotateX(0);
  }
  25% {
    transform: translateY(-5px) rotateX(2deg);
  }
  50% {
    transform: translateY(0) rotateX(0);
  }
  75% {
    transform: translateY(5px) rotateX(-2deg);
  }
}

/* 색상 스와치 호버 */
@keyframes swatchGlow {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.7);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(99, 102, 241, 0);
  }
}

/* 비교 슬라이더 */
@keyframes compareSlide {
  0% {
    transform: translateX(-50%);
  }
  100% {
    transform: translateX(50%);
  }
}

/* ==========================================
   AI 분석 애니메이션
   ========================================== */

/* 스캔 라인 */
@keyframes scanLine {
  0% {
    top: 0;
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  100% {
    top: 100%;
    opacity: 0;
  }
}

/* 얼굴 감지 프레임 */
@keyframes faceDetection {
  0%, 100% {
    border-color: rgba(34, 197, 94, 0.8);
    transform: scale(1);
  }
  50% {
    border-color: rgba(34, 197, 94, 1);
    transform: scale(1.02);
  }
}

/* 분석 진행률 */
@keyframes analysisProgress {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* 피부톤 계산 */
@keyframes skinToneCalculation {
  0% {
    background-position: 0% 50%;
    filter: hue-rotate(0deg);
  }
  50% {
    background-position: 100% 50%;
    filter: hue-rotate(180deg);
  }
  100% {
    background-position: 0% 50%;
    filter: hue-rotate(360deg);
  }
}

/* ==========================================
   모달 및 오버레이 애니메이션
   ========================================== */

/* 모달 등장 */
@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* 모달 퇴장 */
@keyframes modalSlideOut {
  from {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  to {
    opacity: 0;
    transform: scale(0.95) translateY(-20px);
  }
}

/* 오버레이 페이드 */
@keyframes overlayFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 사이드 패널 슬라이드 */
@keyframes sidebarSlideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

/* ==========================================
   토스트 및 알림 애니메이션
   ========================================== */

/* 토스트 등장 */
@keyframes toastSlideIn {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 토스트 퇴장 */
@keyframes toastSlideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

/* 알림 깜빡임 */
@keyframes notificationBlink {
  0%, 50%, 100% {
    opacity: 1;
  }
  25%, 75% {
    opacity: 0.5;
  }
}

/* ==========================================
   성과 표시 애니메이션
   ========================================== */

/* 성공 체크마크 */
@keyframes checkmark {
  0% {
    stroke-dashoffset: 50;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

/* 에러 X 마크 */
@keyframes errorX {
  0% {
    transform: scale(0) rotate(0deg);
  }
  50% {
    transform: scale(1.2) rotate(90deg);
  }
  100% {
    transform: scale(1) rotate(90deg);
  }
}

/* 프로그레스 링 */
@keyframes progressRing {
  0% {
    stroke-dashoffset: 251.2;
    transform: rotate(-90deg);
  }
  100% {
    stroke-dashoffset: 0;
    transform: rotate(-90deg);
  }
}

/* ==========================================
   유틸리티 애니메이션 클래스
   ========================================== */

.animate-fadeIn {
  animation: fadeIn 0.3s ease-out;
}

.animate-fadeOut {
  animation: fadeOut 0.3s ease-out;
}

.animate-fadeInUp {
  animation: fadeInUp 0.4s ease-out;
}

.animate-fadeInDown {
  animation: fadeInDown 0.4s ease-out;
}

.animate-fadeInLeft {
  animation: fadeInLeft 0.4s ease-out;
}

.animate-fadeInRight {
  animation: fadeInRight 0.4s ease-out;
}

.animate-slideInUp {
  animation: slideInUp 0.3s ease-out;
}

.animate-slideInDown {
  animation: slideInDown 0.3s ease-out;
}

.animate-slideInLeft {
  animation: slideInLeft 0.3s ease-out;
}

.animate-slideInRight {
  animation: slideInRight 0.3s ease-out;
}

.animate-scaleIn {
  animation: scaleIn 0.3s ease-out;
}

.animate-zoomIn {
  animation: zoomIn 0.3s ease-out;
}

.animate-rotateIn {
  animation: rotateIn 0.5s ease-out;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-wave {
  animation: wave 2s ease-in-out infinite;
}

.animate-shake {
  animation: shake 0.5s ease-in-out;
}

.animate-wobble {
  animation: wobble 1s ease-in-out;
}

.animate-heartBeat {
  animation: heartBeat 1.5s ease-in-out infinite;
}

/* 딜레이 클래스 */
.delay-75 { animation-delay: 75ms; }
.delay-100 { animation-delay: 100ms; }
.delay-150 { animation-delay: 150ms; }
.delay-200 { animation-delay: 200ms; }
.delay-300 { animation-delay: 300ms; }
.delay-500 { animation-delay: 500ms; }
.delay-700 { animation-delay: 700ms; }
.delay-1000 { animation-delay: 1000ms; }

/* 지속시간 클래스 */
.duration-75 { animation-duration: 75ms; }
.duration-100 { animation-duration: 100ms; }
.duration-150 { animation-duration: 150ms; }
.duration-200 { animation-duration: 200ms; }
.duration-300 { animation-duration: 300ms; }
.duration-500 { animation-duration: 500ms; }
.duration-700 { animation-duration: 700ms; }
.duration-1000 { animation-duration: 1000ms; }

/* 이징 클래스 */
.ease-linear { animation-timing-function: linear; }
.ease-in { animation-timing-function: cubic-bezier(0.4, 0, 1, 1); }
.ease-out { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
.ease-in-out { animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

/* 반복 클래스 */
.repeat-1 { animation-iteration-count: 1; }
.repeat-2 { animation-iteration-count: 2; }
.repeat-3 { animation-iteration-count: 3; }
.repeat-infinite { animation-iteration-count: infinite; }

/* 방향 클래스 */
.alternate { animation-direction: alternate; }
.reverse { animation-direction: reverse; }
.alternate-reverse { animation-direction: alternate-reverse; }

/* 상태 클래스 */
.running { animation-play-state: running; }
.paused { animation-play-state: paused; }

/* 채움 모드 클래스 */
.fill-none { animation-fill-mode: none; }
.fill-forwards { animation-fill-mode: forwards; }
.fill-backwards { animation-fill-mode: backwards; }
.fill-both { animation-fill-mode: both; }

/* ==========================================
   접근성 고려사항
   ========================================== */

/* 애니메이션 감소 설정 존중 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .animate-spin {
    animation: none;
  }
  
  .animate-bounce {
    animation: none;
  }
  
  .animate-pulse {
    animation: none;
  }
}

/* 고대비 모드에서 애니메이션 단순화 */
@media (prefers-contrast: high) {
  .animate-rainbow {
    animation: none;
    color: var(--text-primary);
  }
  
  .animate-gradientShift {
    animation: none;
    background: var(--primary-color);
  }
}

/* ==========================================
   성능 최적화
   ========================================== */

/* 하드웨어 가속 활용 */
.hw-accelerate {
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;
  perspective: 1000px;
}

/* 레이어 승격 */
.layer-promote {
  will-change: transform, opacity;
  transform: translateZ(0);
}

/* 컴포지터 레이어 */
.compositor-layer {
  will-change: transform;
  contain: layout style paint;
}
